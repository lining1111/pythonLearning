# Case1：修改单个元素
nums = [40, 36, 89, 2, 36, 100, 7]
nums[2] = -26  # 使用正数索引
nums[-3] = -66.2  # 使用负数索引
print(nums)

# Case2：修改一组元素。Python 支持通过切片语法给一组元素赋值。在进行这种操作时，如果不指定步长（step 参数），Python 就不要求新赋值的元素个数与原来的元素个数相同；这意味，该操作既可以为列表添加元素，也可以为列表删除元素。
#   Case2-1： 相等
nums = [40, 36, 89, 2, 36, 100, 7]
# 修改第 1~4 个元素的值（不包括第4个元素）
nums[1: 4] = [45.25, -77, -52.5]
print(nums)
#   Case2-2： 新增
nums[1: 4] = [45.25, -77, -52.5, 2, 3, 4, 5]
print(nums)
#   Case2-3： 删除
nums[1: 4] = [45.25]
print(nums)

# Case3：使用切片语法赋值时，Python 不支持单个值，例如下面的写法就是错误的：
# nums[4: 4] = -77

# Case4：但是如果使用字符串赋值，Python 会自动把字符串转换成序列，其中的每个字符都是一个元素，请看下面的代码：
s = list("Hello")
s[2:4] = "XYZ"
print(s)

# Case5：使用切片语法时也可以指定步长（step 参数），但这个时候就要求所赋值的新元素的个数与原有元素的个数相同，例如：
nums = [40, 36, 89, 2, 36, 100, 7]
# 步长为2，为第1、3、5个元素赋值
nums[1: 6: 2] = [0.025, -99, 20.5]
print(nums)
